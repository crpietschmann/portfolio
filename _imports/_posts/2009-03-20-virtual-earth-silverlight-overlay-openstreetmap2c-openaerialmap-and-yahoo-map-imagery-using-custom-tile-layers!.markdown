---
layout: post
title: "Bing Maps Silverlight CTP: Overlay OpenStreetMap, OpenAerialMap and Yahoo Map Imagery using Custom Tile Layers!"
date: 2009-03-20 18:51:00 -0500
comments: true
published: true
categories: ["blog", "archives"]
tags: ["Bing Maps", "Silverlight"]
alias: ["/post/2009/03/20/Virtual-Earth-Silverlight-Overlay-OpenStreetMap2c-OpenAerialMap-and-Yahoo-Map-Imagery-using-Custom-Tile-Layers!", "/post/2009/03/20/virtual-earth-silverlight-overlay-openstreetmap2c-openaerialmap-and-yahoo-map-imagery-using-custom-tile-layers!"]
---
<!-- more -->
<p><strong>UPDATE: I have written a newer version of this article to specifically target the latest Bing Maps Silverlight Control Version 1.0 Release.</strong></p>
<p><strong>You can find the new article here: <a href="/post.aspx?id=b3812d3c-cb64-4947-b6df-4ebb8e3a2e43">Display OpenStreetMap Imagery using Bing Maps Silverlight Control v1</a><br /></strong></p>
<hr />
<p>In the &ldquo;<a href="/post.aspx?id=ce8b5456-ef99-4311-8099-16976ebcc5e2" target="_blank">Using Tile Layers to Overlay Custom Map Imagery</a>&rdquo; article I showed you how to overlay your own Custom Map Imagery that you generated using the MapCruncher tool on top of the Map. Now, in this article I&rsquo;ll show you what you need to know in order to overlay map imagery from other competing mapping services (OpenStreetMap, OpenAerialMap and Yahoo Maps). This allows you to easily build in functionality that allows your users to easily switch (with the click of a button or selection of a dropdown) which mapping service imagery is used to visualize the data in your application.</p>
<p>This was written for the Bing Maps Silverlight CTP Release.</p>
<p><em><strong>Beware:</strong> This article is just a demo of how this is possible. If you do implement this, you need to keep in mind that you&rsquo;ll need to then adhere to both the Virtual Earth Silverlight Control CTP Terms of Use and the Terms of Use for which ever mapping services data you are displaying.</em></p>
<p>Before I begin, I&rsquo;d like to thank the awesome guys that are working on the DeepEarth Project.</p>
<p>Now to the exciting stuff!</p>
<h3>Overview of What&rsquo;s Needed</h3>
<p>The steps to create a Tile Layer that displays Map Imagery from the mentions services is very similar to the method mentioned in the &ldquo;Using Tile Layers to Overlay Custom Map Imagery&rdquo; arcticle, with the exception that you need to create your own Custom Tile Source object that inherits from TileSource.</p>
<p>Here&rsquo;s the steps needed to do this:</p>
<ol>
<li>Create a Custom Tile Source (inheriting from TileSource) object&nbsp; <ol>
<li>Define the &ldquo;uriFormat&rdquo; to be used to generate the Uri of the Map Images. </li>
<li>Override the&rdquo;GetUri&rdquo; method. This method uses the &ldquo;uriFormat&rdquo; to generate the Uri of the Map Images. </li>
</ol> </li>
<li>Add the Tile Source to the Map      <ol>
<li>Create a MapTileLayer object instance </li>
<li>Create an instance of you Custom Tile Source object </li>
<li>Add the Custom Tile Source object to the MapTileLayer </li>
<li>Set the MapTileLayer&rsquo;s Opacity to the desired value </li>
<li>Add the MapTileLayer to the Children collection of the Map </li>
</ol> </li>
</ol>
<p>The TileSource objects &ldquo;GetUri&rdquo; method takes the following 3 arguments:</p>
<ol>
<li><strong>x</strong> &ndash; The horizontal position of the tile. </li>
<li><strong>y</strong> &ndash; The vertical position of the tile. </li>
<li><strong>zoomLevel</strong> &ndash; The zoom level of the tile. </li>
</ol>
<p>You then need to convert (within this method) the x, y, and zoomLevel values into the correct values to be passed using the uriFormat to load the map imagery tiles. This can take a little work in some cases (as with Yahoo Maps) and it an be straight forward in others (as with OpenStreetMap and OpenAerialMap).</p>
<p>Also, when you&rsquo;re showing Map Imagery that will completely overlay over the top of the Virtual Earth Imagery, it&rsquo;s a good practice to set the Map&rsquo;s Mode to an &ldquo;Empty&rdquo; mode that will prevent the Virtual Earth imagery from even being downloaded for display. This will increase performance a little (whether you notice it or not), and it will prevent you from using up unnecessary transactions using the Virtual Earth Web Service (this is how the control loads the Virtual Earth imagery behind the scenes.)</p>
<h3>Create a TileSource for OpenStreetMap</h3>
<p><a href="/images/postsVEJS_007_OpenStreetMapImagery.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="VEJS_007_OpenStreetMapImagery" src="/images/postsVEJS_007_OpenStreetMapImagery_thumb.png" border="0" alt="VEJS_007_OpenStreetMapImagery" width="244" height="215" align="right" /></a>First we need to create custom TileSource object, set the UriFormat to be used to generate the Imagery Uri, and then override the &ldquo;GetUri&rdquo; method with code that generates the appropriate Imagery Uri&rsquo;s using &ldquo;String.Format&rdquo;.</p>
<p>The resulting Custom Tile Source object is so simple, it&rsquo;s probably easier to just show you the code.</p>
<p>namespace VirtualEarthSilverlight01    <br />{     <br />&nbsp;&nbsp;&nbsp; public class OpenStreetMapTileSource : Microsoft.VirtualEarth.MapControl.TileSource     <br />&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public OpenStreetMapTileSource()     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : base("http://tile.openstreetmap.org/{2}/{0}/{1}.png")     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public override Uri GetUri(int x, int y, int zoomLevel)    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new Uri(String.Format(this.UriFormat, x, y, zoomLevel));     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }     <br />&nbsp;&nbsp;&nbsp; }     <br />}</p>
<p>&nbsp;</p>
<p>If you aren&rsquo;t familiar with the above method of using &ldquo;String.Format&rdquo; to replace certain placeholders within a string with specific values, you can reference the <a href="http://msdn.microsoft.com/en-us/library/b1csw23d.aspx" target="_blank">MSDN Documentation here</a>.</p>
<p>Now using the described overview above, we can add the new OpenStreetMapTileSource object to a MapTileLayer on the Map and display the OpenStreetMap Imagery within the Silverlight Map Control. Here&rsquo;s an example of doing this with XAML.</p>
<p>&lt;UserControl x:Class="VirtualEarthSilverlight01.Page"    <br />&nbsp;&nbsp;&nbsp; xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"     <br />&nbsp;&nbsp;&nbsp; xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"     <br />&nbsp;&nbsp;&nbsp; xmlns:m="clr-namespace:Microsoft.VirtualEarth.MapControl;assembly=Microsoft.VirtualEarth.MapControl"     <br />&nbsp;&nbsp;&nbsp; xmlns:mCore="clr-namespace:Microsoft.VirtualEarth.MapControl.Core;assembly=Microsoft.VirtualEarth.MapControl"&nbsp; <br />&nbsp;&nbsp;&nbsp; xmlns:local="clr-namespace:VirtualEarthSilverlight01"     <br />&nbsp;&nbsp;&nbsp; Width="1600" Height="768"&gt;     <br />&nbsp;&nbsp;&nbsp; &lt;Grid x:Name="LayoutRoot" Background="White"&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map Name="MainMap"&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map.Mode&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;mCore:MercatorMode&gt;&lt;/mCore:MercatorMode&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map.Mode&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map.Children&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:MapTileLayer&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:MapTileLayer.TileSources&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;local:OpenStreetMapTileSource&gt;&lt;/local:OpenStreetMapTileSource&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:MapTileLayer.TileSources&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:MapTileLayer&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map.Children&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map&gt;     <br />&nbsp;&nbsp;&nbsp; &lt;/Grid&gt;     <br />&lt;/UserControl&gt;</p>
<p>&nbsp;</p>
<p>Also, since the OpenStreetMapTileSource object is contained within the projects namespace (&ldquo;VirtualEarthSilverlight01&rdquo;) we need to also add a namespace reference to the XAML file. In the example above I&rsquo;m giving it the prefix of &ldquo;local&rdquo;. Once the namespace is included, we can then use our OpenStreetMapTileSource object within the XAML.</p>
<h3>Create a TileSource for OpenAerialMap</h3>
<p><a href="/images/postsVEJS_007_OpenAerialMapImagery.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="VEJS_007_OpenAerialMapImagery" src="/images/postsVEJS_007_OpenAerialMapImagery_thumb.png" border="0" alt="VEJS_007_OpenAerialMapImagery" width="244" height="215" align="right" /></a>The process of creating a Custom Tile Source and adding it to the Map is identical for OpenAerialMap Imagery as the above example for OpenStreetMap; with the exception of the uriFormat that is used to load the imagery. So, I&rsquo;m not going to re-explain the process all over again. Instead, I&rsquo;ll just show you the code.</p>
<p>The resulting Custom Tile Source object for showing OpenAerialMap Imagery:</p>
<p>namespace VirtualEarthSilverlight01    <br />{     <br />&nbsp;&nbsp;&nbsp; public class OpenAerialMapTileSource : Microsoft.VirtualEarth.MapControl.TileSource     <br />&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public OpenAerialMapTileSource()     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : base("http://tile.openaerialmap.org/tiles/1.0.0/openaerialmap-900913/{2}/{0}/{1}.jpg")     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public override Uri GetUri(int x, int y, int zoomLevel)    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new Uri(String.Format(this.UriFormat, x, y, zoomLevel));     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }     <br />&nbsp;&nbsp;&nbsp; }     <br />}</p>
<p>&nbsp;</p>
<p>Here&rsquo;s some example XAML that adds the OpenAerialMapTileSource object to the Map:</p>
<p>&lt;UserControl x:Class="VirtualEarthSilverlight01.Page"    <br />&nbsp;&nbsp;&nbsp; xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"     <br />&nbsp;&nbsp;&nbsp; xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"     <br />&nbsp;&nbsp;&nbsp; xmlns:m="clr-namespace:Microsoft.VirtualEarth.MapControl;assembly=Microsoft.VirtualEarth.MapControl"     <br />&nbsp;&nbsp;&nbsp; xmlns:mCore="clr-namespace:Microsoft.VirtualEarth.MapControl.Core;assembly=Microsoft.VirtualEarth.MapControl"     <br />&nbsp;&nbsp;&nbsp; xmlns:local="clr-namespace:VirtualEarthSilverlight01"     <br />&nbsp;&nbsp;&nbsp; Width="1600" Height="768"&gt;     <br />&nbsp;&nbsp;&nbsp; &lt;Grid x:Name="LayoutRoot" Background="White"&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map Name="MainMap"&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map.Mode&gt;    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;mCore:MercatorMode&gt;&lt;/mCore:MercatorMode&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map.Mode&gt;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map.Children&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:MapTileLayer&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:MapTileLayer.TileSources&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;local:OpenAerialMapTileSource&gt;&lt;/local:OpenAerialMapTileSource&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:MapTileLayer.TileSources&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:MapTileLayer&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map.Children&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map&gt;     <br />&nbsp;&nbsp;&nbsp; &lt;/Grid&gt;     <br />&lt;/UserControl&gt;</p>
<p>&nbsp;</p>
<h3>Create a TileSource for Yahoo Maps (Street, Aerial and Hybrid)</h3>
<p>Again, the process for creating a Custom Tile Source for Yahoo Maps and adding it to the Map is almost identical to the above examples. Except, with Yahoo maps there&rsquo;s a little math that needs to be done to convert the x, y and zoomLevel arguments that are passed in to the &ldquo;TileSource.GetUri&rdquo; method to be the correct values need to load the Yahoo Maps Imagery. I&rsquo;m not going to cover the process of what&rsquo;s needed to convert them from the Virtual Earth values to the Yahoo Maps values, but the as you&rsquo;ll see below the code needed is fairly simple.</p>
<h4>Yahoo Maps &ndash; Street Imagery</h4>
<p><a href="/images/postsVEJS_007_YahooMapsStreetImagery.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="VEJS_007_YahooMapsStreetImagery" src="/images/postsVEJS_007_YahooMapsStreetImagery_thumb.png" border="0" alt="VEJS_007_YahooMapsStreetImagery" width="244" height="215" align="right" /></a>Here&rsquo;s the code for the Custom Tile Source for Yahoo Maps Street Imagery:</p>
<p>namespace VirtualEarthSilverlight01    <br />{     <br />&nbsp;&nbsp;&nbsp; public class YahooStreetTileSource : Microsoft.VirtualEarth.MapControl.TileSource     <br />&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public YahooStreetTileSource()     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : base("http://us.maps2.yimg.com/us.png.maps.yimg.com/png?v=3.52&amp;t=m&amp;x={0}&amp;y={1}&amp;z={2}")     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public override Uri GetUri(int x, int y, int zoomLevel)    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // The math used here was copied from the DeepEarth Project (http://deepearth.codeplex.com)     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double posY;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double zoom = 18 - zoomLevel;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double num4 = Math.Pow(2.0, zoomLevel) / 2.0;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (y &lt; num4)    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; posY = (num4 - Convert.ToDouble(y)) - 1.0;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; posY = ((Convert.ToDouble(y) + 1) - num4) * -1.0;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new Uri(String.Format(this.UriFormat, x, posY, zoom));    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }     <br />&nbsp;&nbsp;&nbsp; }     <br />}</p>
<p>&nbsp;</p>
<p>And, here&rsquo;s some example XAML that adds the YahooStreetTileSource object to the Map:</p>
<p>&lt;UserControl x:Class="VirtualEarthSilverlight01.Page"    <br />&nbsp;&nbsp;&nbsp; xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"     <br />&nbsp;&nbsp;&nbsp; xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"     <br />&nbsp;&nbsp;&nbsp; xmlns:m="clr-namespace:Microsoft.VirtualEarth.MapControl;assembly=Microsoft.VirtualEarth.MapControl"     <br />&nbsp;&nbsp;&nbsp; xmlns:mCore="clr-namespace:Microsoft.VirtualEarth.MapControl.Core;assembly=Microsoft.VirtualEarth.MapControl"     <br />&nbsp;&nbsp;&nbsp; xmlns:local="clr-namespace:VirtualEarthSilverlight01"     <br />&nbsp;&nbsp;&nbsp; Width="1600" Height="768"&gt;     <br />&nbsp;&nbsp;&nbsp; &lt;Grid x:Name="LayoutRoot" Background="White"&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map Name="MainMap"&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map.Mode&gt;    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;mCore:MercatorMode&gt;&lt;/mCore:MercatorMode&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map.Mode&gt;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map.Children&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:MapTileLayer&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:MapTileLayer.TileSources&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;local:YahooStreetTileSource&gt;&lt;/local:YahooStreetTileSource&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:MapTileLayer.TileSources&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:MapTileLayer&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map.Children&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map&gt;     <br />&nbsp;&nbsp;&nbsp; &lt;/Grid&gt;     <br />&lt;/UserControl&gt;</p>
<p>&nbsp;</p>
<h4>Yahoo Maps &ndash; Aerial Imagery</h4>
<p><a href="/images/postsVEJS_007_YahooMapsAerialImagery.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="VEJS_007_YahooMapsAerialImagery" src="/images/postsVEJS_007_YahooMapsAerialImagery_thumb.png" border="0" alt="VEJS_007_YahooMapsAerialImagery" width="244" height="215" align="right" /></a>Here&rsquo;s the code for the Custom Tile Source for Yahoo Maps Aerial Imagery:</p>
<p>namespace VirtualEarthSilverlight01    <br />{     <br />&nbsp;&nbsp;&nbsp; public class YahooAerialTileSource : Microsoft.VirtualEarth.MapControl.TileSource     <br />&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public YahooAerialTileSource()     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : base("http://us.maps3.yimg.com/aerial.maps.yimg.com/tile?v=1.7&amp;t=a&amp;x={0}&amp;y={1}&amp;z={2}")     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public override Uri GetUri(int x, int y, int zoomLevel)    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // The math used here was copied from the DeepEarth Project (http://deepearth.codeplex.com)     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double posY;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double zoom = 18 - zoomLevel;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double num4 = Math.Pow(2.0, zoomLevel) / 2.0;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (y &lt; num4)    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; posY = (num4 - Convert.ToDouble(y)) - 1.0;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; posY = ((Convert.ToDouble(y) + 1) - num4) * -1.0;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new Uri(String.Format(this.UriFormat, x, posY, zoom));    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }     <br />&nbsp;&nbsp;&nbsp; }     <br />}</p>
<p>&nbsp;</p>
<p>And, here&rsquo;s some example XAML that adds the YahooAerialTileSource object to the Map:</p>
<p>&lt;UserControl x:Class="VirtualEarthSilverlight01.Page"    <br />&nbsp;&nbsp;&nbsp; xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"     <br />&nbsp;&nbsp;&nbsp; xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"     <br />&nbsp;&nbsp;&nbsp; xmlns:m="clr-namespace:Microsoft.VirtualEarth.MapControl;assembly=Microsoft.VirtualEarth.MapControl"     <br />&nbsp;&nbsp;&nbsp; xmlns:mCore="clr-namespace:Microsoft.VirtualEarth.MapControl.Core;assembly=Microsoft.VirtualEarth.MapControl"     <br />&nbsp;&nbsp;&nbsp; xmlns:local="clr-namespace:VirtualEarthSilverlight01"     <br />&nbsp;&nbsp;&nbsp; Width="1600" Height="768"&gt;     <br />&nbsp;&nbsp;&nbsp; &lt;Grid x:Name="LayoutRoot" Background="White"&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map Name="MainMap"&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map.Mode&gt;    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;mCore:MercatorMode&gt;&lt;/mCore:MercatorMode&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map.Mode&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map.Children&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:MapTileLayer&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:MapTileLayer.TileSources&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;local:YahooAerialTileSource&gt;&lt;/local:YahooAerialTileSource&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:MapTileLayer.TileSources&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:MapTileLayer&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map.Children&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map&gt;     <br />&nbsp;&nbsp;&nbsp; &lt;/Grid&gt;     <br />&lt;/UserControl&gt;</p>
<p>&nbsp;</p>
<h4>Yahoo Maps &ndash; Hybrid Imagery</h4>
<p><a href="/images/postsVEJS_007_YahooMapsHybridImagery.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="VEJS_007_YahooMapsHybridImagery" src="/images/postsVEJS_007_YahooMapsHybridImagery_thumb.png" border="0" alt="VEJS_007_YahooMapsHybridImagery" width="244" height="215" align="right" /></a>One thing with the Yahoo Maps Hybrid Imagery is it only shows the roads in the imagery, everything else is transparent. So in order to get the same view as the Virtual Earth Hybrid Map Mode, you need to add the Yahoo Maps Aerial Imagery to the Map, then add the Yahoo Maps Hybrid Imagery so it overlays on top of the the Aerial imagery. You&rsquo;ll see below that this is really simple to do.</p>
<p>Here&rsquo;s the code for the Custom Tile Source for Yahoo Maps Hybrid Imagery:</p>
<p>namespace VirtualEarthSilverlight01    <br />{     <br />&nbsp;&nbsp;&nbsp; public class YahooHybridTileSource : Microsoft.VirtualEarth.MapControl.TileSource     <br />&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public YahooHybridTileSource()     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : base("http://us.maps3.yimg.com/aerial.maps.yimg.com/png?v=2.2&amp;t=h&amp;x={0}&amp;y={1}&amp;z={2}&rdquo;)     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public override Uri GetUri(int x, int y, int zoomLevel)    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // The math used here was copied from the DeepEarth Project (http://deepearth.codeplex.com)     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double posY;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double zoom = 18 - zoomLevel;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double num4 = Math.Pow(2.0, zoomLevel) / 2.0;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (y &lt; num4)    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; posY = (num4 - Convert.ToDouble(y)) - 1.0;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; posY = ((Convert.ToDouble(y) + 1) - num4) * -1.0;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new Uri(String.Format(this.UriFormat, x, posY, zoom));    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }     <br />&nbsp;&nbsp;&nbsp; }     <br />}</p>
<p>&nbsp;</p>
<p>And, here&rsquo;s some example XAML that adds the YahooAerialTileSource and YahooHybridTileSource objects to the Map:</p>
<p>&lt;UserControl x:Class="VirtualEarthSilverlight01.Page"    <br />&nbsp;&nbsp;&nbsp; xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"     <br />&nbsp;&nbsp;&nbsp; xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"     <br />&nbsp;&nbsp;&nbsp; xmlns:m="clr-namespace:Microsoft.VirtualEarth.MapControl;assembly=Microsoft.VirtualEarth.MapControl"     <br />&nbsp;&nbsp;&nbsp; xmlns:mCore="clr-namespace:Microsoft.VirtualEarth.MapControl.Core;assembly=Microsoft.VirtualEarth.MapControl"     <br />&nbsp;&nbsp;&nbsp; xmlns:local="clr-namespace:VirtualEarthSilverlight01"     <br />&nbsp;&nbsp;&nbsp; Width="1600" Height="768"&gt;     <br />&nbsp;&nbsp;&nbsp; &lt;Grid x:Name="LayoutRoot" Background="White"&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map Name="MainMap"&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map.Mode&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;mCore:MercatorMode&gt;&lt;/mCore:MercatorMode&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map.Mode&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:Map.Children&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:MapTileLayer&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;m:MapTileLayer.TileSources&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;local:YahooAerialTileSource&gt;&lt;/local:YahooAerialTileSource&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;local:YahooHybridTileSource&gt;&lt;/local:YahooHybridTileSource&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:MapTileLayer.TileSources&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:MapTileLayer&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map.Children&gt;     <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/m:Map&gt;     <br />&nbsp;&nbsp;&nbsp; &lt;/Grid&gt;     <br />&lt;/UserControl&gt;</p>
<p>&nbsp;</p>
<h3>Conclusion</h3>
<p>As you can see, the ability to overlay custom map imagery of any kind (like OpenStreetMap or Yahoo Maps Imagery) really offers some great flexibility in the control. Plus, it&rsquo;s easy to do!</p>
<h4>Previous Tutorial/Article:<strong> </strong><a href="/post.aspx?id=ce8b5456-ef99-4311-8099-16976ebcc5e2">Using Tile Layers to Overlay Custom Map Imagery</a>&nbsp;</h4>
<h4>Next Tutorial/Article: <a href="/post.aspx?id=9f492f0f-8da4-4606-9f43-098074d8b9e9">Using MouseClick Event To Add "Pushpins" </a></h4>
